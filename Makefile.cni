BUILD_DIR := $(abspath $(shell pwd)/build)
LIB_PISTACHE := build/src/libpistache.a


CMAKE_FLAGS := -DCMAKE_POSITION_INDEPENDENT_CODE=True
#CMAKE_FLAGS += -DCMAKE_VERBOSE_MAKEFILE=y
ifneq (,$(filter $(PLATFORM),mce MCE MC-E))
    override PLATFORM := MC-E
    include $(OTX_SDK_ROOT)/cni-otx.mk  # OTX_ROOT must be passed in
    CXX := $(OTX_SDK_ROOT)/$(OTX_CXX)
    CMAKE_FLAGS += -D CMAKE_CXX_COMPILER=$(CXX)
    CMAKE_FLAGS += -D CMAKE_CXX_COMPILER=$(CXX)
else
    override PLATFORM := MC-X
endif

$(info ===)
$(info === Building libpistache for $(PLATFORM))
$(info ===)


all :$(LIB_PISTACHE)
	@echo "libpistache build for $(PLATFORM): SUCCESS"

git_submodules:
	@echo "initializing git submodules"
	git submodule update --init

$(LIB_PISTACHE) : git_submodules
	mkdir -p {build,prefix}
	cd build && CXX=$(CXX) cmake3 $(CMAKE_FLAGS) -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DPISTACHE_BUILD_EXAMPLES=false -DPISTACHE_BUILD_TESTS=false -DPISTACHE_BUILD_DOCS=false -DPISTACHE_USE_SSL=true -DCMAKE_INSTALL_PREFIX=$(PWD)/../prefix .. && make -j && make install

clean:
	rm -rf build
